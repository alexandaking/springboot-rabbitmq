<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wdaking.springbootproducer.mapper.BrokerMessageLogMapper" >
  <resultMap id="BaseResultMap" type="com.wdaking.entity.BrokerMessageLog" >
    <id column="message_id" property="messageId" jdbcType="VARCHAR" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="try_count" property="tryCount" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="next_retry" property="nextRetry" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    message_id, message, try_count, status, next_retry, create_time, update_time
  </sql>

<!--  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >-->
<!--    select -->
<!--    <include refid="Base_Column_List" />-->
<!--    from broker_message_log-->
<!--    where message_id = #{messageId,jdbcType=VARCHAR}-->
<!--  </select>-->
<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >-->
<!--    delete from broker_message_log-->
<!--    where message_id = #{messageId,jdbcType=VARCHAR}-->
<!--  </delete>-->
<!--  <insert id="insert" parameterType="com.wdaking.entity.BrokerMessageLog" >-->
<!--    insert into broker_message_log (message_id, message, try_count, -->
<!--      status, next_retry, create_time, -->
<!--      update_time)-->
<!--    values (#{messageId,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{tryCount,jdbcType=INTEGER}, -->
<!--      #{status,jdbcType=VARCHAR}, #{nextRetry,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, -->
<!--      #{updateTime,jdbcType=TIMESTAMP})-->
<!--  </insert>-->
  <insert id="insertSelective" parameterType="com.wdaking.entity.BrokerMessageLog" >
    insert into rabbitmq.broker_message_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="tryCount != null" >
        try_count,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="nextRetry != null" >
        next_retry,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="tryCount != null" >
        #{tryCount,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="nextRetry != null" >
        #{nextRetry,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
<!--  <update id="updateByPrimaryKeySelective" parameterType="com.wdaking.entity.BrokerMessageLog" >-->
<!--    update broker_message_log-->
<!--    <set >-->
<!--      <if test="message != null" >-->
<!--        message = #{message,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="tryCount != null" >-->
<!--        try_count = #{tryCount,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="status != null" >-->
<!--        status = #{status,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="nextRetry != null" >-->
<!--        next_retry = #{nextRetry,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="createTime != null" >-->
<!--        create_time = #{createTime,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="updateTime != null" >-->
<!--        update_time = #{updateTime,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--    </set>-->
<!--    where message_id = #{messageId,jdbcType=VARCHAR}-->
<!--  </update>-->
<!--  <update id="updateByPrimaryKey" parameterType="com.wdaking.entity.BrokerMessageLog" >-->
<!--    update broker_message_log-->
<!--    set message = #{message,jdbcType=VARCHAR},-->
<!--      try_count = #{tryCount,jdbcType=INTEGER},-->
<!--      status = #{status,jdbcType=VARCHAR},-->
<!--      next_retry = #{nextRetry,jdbcType=TIMESTAMP},-->
<!--      create_time = #{createTime,jdbcType=TIMESTAMP},-->
<!--      update_time = #{updateTime,jdbcType=TIMESTAMP}-->
<!--    where message_id = #{messageId,jdbcType=VARCHAR}-->
<!--  </update>-->


  <select id="query4StatusAndTimeoutMessage" resultMap="BaseResultMap">
          <![CDATA[
          select message_id, message, try_count, status, next_retry, create_time, update_time
              from rabbitmq.broker_message_log bml
              where status = '0'
              and next_retry <= sysdate()
          ]]>
    </select>

  <update id="update4ReSend" >
    update rabbitmq.broker_message_log bml
    set bml.try_count = bml.try_count + 1,
      bml.update_time = #{updateTime, jdbcType=TIMESTAMP}
    where bml.message_id = #{messageId,jdbcType=VARCHAR}
  </update>

  <update id="changeBrokerMessageLogStatus" >
    update rabbitmq.broker_message_log bml
    set bml.status = #{status,jdbcType=VARCHAR},
          bml.update_time = #{updateTime, jdbcType=TIMESTAMP}
    where bml.message_id = #{messageId,jdbcType=VARCHAR}
  </update>

</mapper>